import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(26.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.blueA10004,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.indigo400.withOpacity(0.15);
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.blueA10002,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.indigo50,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.onErrorContainer,
          fontSize: 17.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: colorScheme.onErrorContainer,
          fontSize: 15.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray30001,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 32.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.onErrorContainer,
          fontSize: 24.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.blueGray500.withOpacity(0.53),
          fontSize: 11.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: colorScheme.onErrorContainer,
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.indigoA100,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF9DCEFF),
    primaryContainer: Color(0XFF86242E),

    // Error colors
    errorContainer: Color(0XFF778293),
    onErrorContainer: Color(0XFF0F172A),

    // On colors(text colors)
    onPrimary: Color(0X190714FF),
    onPrimaryContainer: Color(0XFF000113),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber500 => Color(0XFFFFC107);
  Color get amber700 => Color(0XFFF59E0B);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue100 => Color(0XFFC5D8FB);
  Color get blue300 => Color(0XFF63A4FF);
  Color get blue30001 => Color(0XFF6F9DF5);
  Color get blue30002 => Color(0XFF6894E9);
  Color get blue50 => Color(0XFFE2EBFD);
  Color get blue700 => Color(0XFF1976D2);
  Color get blue70001 => Color(0XFF3C6FD1);
  Color get blueA100 => Color(0XFF7CA8FF);
  Color get blueA10001 => Color(0XFF89B9FA);
  Color get blueA10002 => Color(0XFF75A3F6);
  Color get blueA10003 => Color(0XFF7CA9FF);
  Color get blueA10004 => Color(0XFF74A2F6);
  Color get blueA10005 => Color(0XFF76A4F6);
  Color get blueA10019 => Color(0X1972A0F8);
  Color get blueA400 => Color(0XFF1877F2);

  // BlueGray
  Color get blueGray100 => Color(0XFFCCCCCC);
  Color get blueGray10001 => Color(0XFFCBD5E1);
  Color get blueGray300 => Color(0XFF94A3B8);
  Color get blueGray30001 => Color(0XFF98A2B2);
  Color get blueGray500 => Color(0XFF64748B);
  Color get blueGray600 => Color(0XFF316D86);
  Color get blueGray800 => Color(0XFF363B64);
  Color get blueGray80001 => Color(0XFF334155);
  Color get blueGray80002 => Color(0XFF344153);

  // BlueGrayf
  Color get blueGray9003f => Color(0X3F1F244B);

  // DeepOrange
  Color get deepOrange500 => Color(0XFFFF4B26);

  // DeepPurple
  Color get deepPurple900 => Color(0XFF0A17A7);
  Color get deepPurpleA100 => Color(0XFFC58BF2);

  // Gray
  Color get gray100 => Color(0XFFF1F5F9);
  Color get gray10001 => Color(0XFFF3F5F8);
  Color get gray10002 => Color(0XFFF2F4F7);
  Color get gray500 => Color(0XFFA098AE);
  Color get gray900 => Color(0XFF1A1A1A);
  Color get gray90001 => Color(0XFF101828);

  // Indigo
  Color get indigo100 => Color(0XFFB9D1E9);
  Color get indigo400 => Color(0XFF4178D4);
  Color get indigo50 => Color(0XFFE5E8EC);
  Color get indigo70075 => Color(0X75294F97);
  Color get indigo90075 => Color(0X750C386C);
  Color get indigoA100 => Color(0XFF92A3FD);

  // Pink
  Color get pink100 => Color(0XFFEEA4CE);
  Color get pink600 => Color(0XFFE1244A);

  // Purple
  Color get purple600 => Color(0XFF9900A6);
  Color get purpleA400 => Color(0XFFEA00FF);

  // Red
  Color get red600 => Color(0XFFED3442);
  Color get red700 => Color(0XFFD02F44);

  // Teal
  Color get teal300 => Color(0XFF46BD84);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
